
package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "converter", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Converter {


    /**
     * 
     * @param temp
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "celciusToKelvin", targetNamespace = "http://service/", className = "service.CelciusToKelvin")
    @ResponseWrapper(localName = "celciusToKelvinResponse", targetNamespace = "http://service/", className = "service.CelciusToKelvinResponse")
    @Action(input = "http://service/converter/celciusToKelvinRequest", output = "http://service/converter/celciusToKelvinResponse")
    public String celciusToKelvin(
        @WebParam(name = "temp", targetNamespace = "")
        String temp);

    /**
     * 
     * @param temp
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "kelvinToCelcius", targetNamespace = "http://service/", className = "service.KelvinToCelcius")
    @ResponseWrapper(localName = "kelvinToCelciusResponse", targetNamespace = "http://service/", className = "service.KelvinToCelciusResponse")
    @Action(input = "http://service/converter/kelvinToCelciusRequest", output = "http://service/converter/kelvinToCelciusResponse")
    public String kelvinToCelcius(
        @WebParam(name = "temp", targetNamespace = "")
        String temp);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://service/", className = "service.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://service/", className = "service.HelloResponse")
    @Action(input = "http://service/converter/helloRequest", output = "http://service/converter/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
